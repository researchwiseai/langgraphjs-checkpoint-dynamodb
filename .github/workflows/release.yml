name: Release

on:
    push:
        tags:
            - 'v*.*.*'

permissions: write-all

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Environment
              uses: ./.github/actions/setup
              with:
                  node-version: '20'
                  bun-version: 'latest'

            - name: Check version matches tag
              shell: bash
              run: |
                  # Extract version from package.json
                  PACKAGE_VERSION=$(node -p "require('./package.json').version")
                  echo "Package version: $PACKAGE_VERSION"

                  # Extract tag version from GITHUB_REF
                  TAG=${GITHUB_REF#refs/tags/}
                  echo "Git tag: $TAG"

                  # Remove 'v' prefix
                  TAG_VERSION=${TAG#v}

                  echo "Tag version: $TAG_VERSION"

                  # Compare versions
                  if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
                    echo "::error::Package version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION)"
                    exit 1
                  fi

                  echo "âœ… Package version matches tag version."

            - name: Build the project
              run: bun run build

            - name: Publish to NPM
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Generate changelog
              id: changelog
              run: |
                  echo "changelog=$(git log --merges --pretty=format:'- %s by @%an' ${GITHUB_SHA}...${{ github.ref }})" >> $GITHUB_OUTPUT

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  body: |
                      ## Changes
                      ${{ steps.changelog.outputs.changelog }}
